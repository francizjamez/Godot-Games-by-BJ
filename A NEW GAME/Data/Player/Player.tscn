[gd_scene load_steps=22 format=2]

[ext_resource path="res://Data/Player/Textures/Player.png" type="Texture" id=1]
[ext_resource path="res://Data/Player/Scripts/Player.gd" type="Script" id=2]

[sub_resource type="CapsuleShape2D" id=1]
radius = 8.0
height = 12.0

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

render_mode unshaded;

uniform vec4 mask_color : hint_color = vec4(1.0, 0.0, 1.0, 1.0);

void fragment() {
	vec4 should_color = texture(TEXTURE, UV);
	COLOR = mask_color;
	COLOR.a = should_color.a;
}"
custom_defines = ""

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/mask_color = Color( 1, 0, 1, 1 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;
/**
This shader will look at the screen texture, and if the color at the given point
is not completely opaque, and is not magenta (the colour of the mask), it will
draw the silhouette colour. Otherwise, it will draw the normal colour of the
texture.
**/

uniform vec4 mask_color : hint_color = vec4(1.0, 0.0, 1.0, 1.0);
uniform vec4 silhouette_color : hint_color = vec4(0.0, 0.0, 0.0, 0.3);

bool is_magenta(vec4 AColor) {
// Return whether the given color is magenta-looking.
// I defined this as \"red and blue are greater than green, and the difference
// between red and blue is small.\"
bool magenta = AColor.r > 0.1 && AColor.g == 0.0 && AColor.b > 0.1;
//bool magenta = AColor.r > 0.99 && AColor.g == 0.0 && abs(AColor.r - AColor.b) < 0.55;
return magenta;
}

void fragment() {
vec4 should_color = texture(TEXTURE, UV);
vec4 screen_color = texture(SCREEN_TEXTURE, SCREEN_UV);
if (should_color.a == 0.0) discard;

COLOR = is_magenta(screen_color) ? should_color : silhouette_color;
}"
custom_defines = ""

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/mask_color = Color( 1, 0, 1, 1 )
shader_param/silhouette_color = Color( 1, 1, 1, 0.392157 )

[sub_resource type="Animation" id=6]
resource_name = "Down"
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Mask:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mask/Printer:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}

[sub_resource type="Animation" id=7]
resource_name = "Left"
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Mask:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 16, 17, 18, 19, 20, 21, 22, 23 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mask/Printer:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 16, 17, 18, 19, 20, 21, 22, 23 ]
}

[sub_resource type="Animation" id=8]
resource_name = "Right"
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Mask:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 24, 25, 26, 27, 28, 29, 30, 31 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mask/Printer:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 24, 25, 26, 27, 28, 29, 30, 31 ]
}

[sub_resource type="Animation" id=9]
resource_name = "Up"
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Mask:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11, 12, 13, 14, 15 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mask/Printer:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11, 12, 13, 14, 15 ]
}

[sub_resource type="AnimationNodeBlendSpace2D" id=10]

[sub_resource type="AnimationNodeAnimation" id=11]
animation = "Up"

[sub_resource type="AnimationNodeAnimation" id=12]
animation = "Left"

[sub_resource type="AnimationNodeAnimation" id=13]
animation = "Down"

[sub_resource type="AnimationNodeAnimation" id=14]
animation = "Right"

[sub_resource type="AnimationNodeBlendSpace2D" id=15]
blend_point_0/node = SubResource( 11 )
blend_point_0/pos = Vector2( 0, -1 )
blend_point_1/node = SubResource( 12 )
blend_point_1/pos = Vector2( -1, 0 )
blend_point_2/node = SubResource( 13 )
blend_point_2/pos = Vector2( 0, 1 )
blend_point_3/node = SubResource( 14 )
blend_point_3/pos = Vector2( 1, 0 )

[sub_resource type="AnimationNodeStateMachineTransition" id=16]

[sub_resource type="AnimationNodeStateMachineTransition" id=17]

[sub_resource type="AnimationNodeStateMachine" id=18]
states/Idle/node = SubResource( 10 )
states/Idle/position = Vector2( 241, 192 )
states/Move/node = SubResource( 15 )
states/Move/position = Vector2( 458, 192 )
transitions = [ "Idle", "Move", SubResource( 16 ), "Move", "Idle", SubResource( 17 ) ]
start_node = "Move"

[sub_resource type="AnimationNodeStateMachinePlayback" id=19]

[node name="Player" type="KinematicBody2D"]
collision_layer = 3
collision_mask = 3
script = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 1, 34 )
rotation = -1.5708
shape = SubResource( 1 )

[node name="Mask" type="Sprite" parent="."]
material = SubResource( 3 )
position = Vector2( 0, 11 )
texture = ExtResource( 1 )
hframes = 32
frame = 24

[node name="Printer" type="Sprite" parent="Mask"]
material = SubResource( 5 )
z_index = 6
texture = ExtResource( 1 )
hframes = 32
frame = 24

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Down = SubResource( 6 )
anims/Left = SubResource( 7 )
anims/Right = SubResource( 8 )
anims/Up = SubResource( 9 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 18 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 19 )
parameters/Idle/blend_position = Vector2( 0, 0 )
parameters/Move/blend_position = Vector2( 0, 0.0064795 )
